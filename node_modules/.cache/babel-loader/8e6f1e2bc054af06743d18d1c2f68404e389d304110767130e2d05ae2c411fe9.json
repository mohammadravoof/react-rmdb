{"ast":null,"code":"import { SEARCH_BASE_URL, POPULAR_BASE_URL, API_URL, API_KEY, REQUEST_TOKEN_URL, LOGIN_URL, SESSION_ID_URL } from './config';\nconst defaultConfig = {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n};\nconst apiSettings = {\n  fetchMovies: async (searchTerm, page) => {\n    const endpoint = searchTerm ? `${SEARCH_BASE_URL}${searchTerm}&page=${page}` : `${POPULAR_BASE_URL}&page=${page}`;\n    return await (await fetch(endpoint)).json();\n  },\n  fetchMovie: async movieId => {\n    const endpoint = `${API_URL}movie/${movieId}?api_key=${API_KEY}`;\n    return await (await fetch(endpoint)).json();\n  },\n  fetchCredits: async movieId => {\n    const creditsEndpoint = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\n    return await (await fetch(creditsEndpoint)).json();\n  },\n  // Bonus material below for login\n  getRequestToken: async () => {\n    const reqToken = await (await fetch(REQUEST_TOKEN_URL)).json();\n    return reqToken.request_token;\n  },\n  authenticate: async (requestToken, username, password) => {\n    const bodyData = {\n      username,\n      password,\n      request_token: requestToken\n    };\n    // First authenticate the requestToken\n    const data = await (await fetch(LOGIN_URL, {\n      ...defaultConfig,\n      body: JSON.stringify(bodyData)\n    })).json();\n    // Then get the sessionId with the requestToken\n    if (data.success) {\n      const sessionId = await (await fetch(SESSION_ID_URL, {\n        ...defaultConfig,\n        body: JSON.stringify({\n          request_token: requestToken\n        })\n      })).json();\n      return sessionId;\n    }\n  },\n  rateMovie: async (sessionId, movieId, value) => {\n    const endpoint = `${API_URL}movie/${movieId}/rating?api_key=${API_KEY}&session_id=${sessionId}`;\n    const rating = await (await fetch(endpoint, {\n      ...defaultConfig,\n      body: JSON.stringify({\n        value\n      })\n    })).json();\n    return rating;\n  }\n};\nexport default apiSettings;","map":{"version":3,"names":["SEARCH_BASE_URL","POPULAR_BASE_URL","API_URL","API_KEY","REQUEST_TOKEN_URL","LOGIN_URL","SESSION_ID_URL","defaultConfig","method","headers","apiSettings","fetchMovies","searchTerm","page","endpoint","fetch","json","fetchMovie","movieId","fetchCredits","creditsEndpoint","getRequestToken","reqToken","request_token","authenticate","requestToken","username","password","bodyData","data","body","JSON","stringify","success","sessionId","rateMovie","value","rating"],"sources":["/Users/mohammadravoof/Documents/GitHub/react-rmdb-v3-starter-files/react-rmdb/src/API.js"],"sourcesContent":["import {\n  SEARCH_BASE_URL,\n  POPULAR_BASE_URL,\n  API_URL,\n  API_KEY,\n  REQUEST_TOKEN_URL,\n  LOGIN_URL,\n  SESSION_ID_URL\n} from './config';\n\nconst defaultConfig = {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n};\n\nconst apiSettings = {\n  fetchMovies: async (searchTerm, page) => {\n    const endpoint = searchTerm\n      ? `${SEARCH_BASE_URL}${searchTerm}&page=${page}`\n      : `${POPULAR_BASE_URL}&page=${page}`;\n    return await (await fetch(endpoint)).json();\n  },\n  fetchMovie: async movieId => {\n    const endpoint = `${API_URL}movie/${movieId}?api_key=${API_KEY}`;\n    return await (await fetch(endpoint)).json();\n  },\n  fetchCredits: async movieId => {\n    const creditsEndpoint = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\n    return await (await fetch(creditsEndpoint)).json();\n  },\n  // Bonus material below for login\n  getRequestToken: async () => {\n    const reqToken = await (await fetch(REQUEST_TOKEN_URL)).json();\n    return reqToken.request_token;\n  },\n  authenticate: async (requestToken, username, password) => {\n    const bodyData = {\n      username,\n      password,\n      request_token: requestToken\n    };\n    // First authenticate the requestToken\n    const data = await (\n      await fetch(LOGIN_URL, {\n        ...defaultConfig,\n        body: JSON.stringify(bodyData)\n      })\n    ).json();\n    // Then get the sessionId with the requestToken\n    if (data.success) {\n      const sessionId = await (\n        await fetch(SESSION_ID_URL, {\n          ...defaultConfig,\n          body: JSON.stringify({ request_token: requestToken })\n        })\n      ).json();\n      return sessionId;\n    }\n  },\n  rateMovie: async (sessionId, movieId, value) => {\n    const endpoint = `${API_URL}movie/${movieId}/rating?api_key=${API_KEY}&session_id=${sessionId}`;\n\n    const rating = await (\n      await fetch(endpoint, {\n        ...defaultConfig,\n        body: JSON.stringify({ value })\n      })\n    ).json();\n\n    return rating;\n  }\n};\n\nexport default apiSettings;\n"],"mappings":"AAAA,SACEA,eAAe,EACfC,gBAAgB,EAChBC,OAAO,EACPC,OAAO,EACPC,iBAAiB,EACjBC,SAAS,EACTC,cAAc,QACT,UAAU;AAEjB,MAAMC,aAAa,GAAG;EACpBC,MAAM,EAAE,MAAM;EACdC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC;AAED,MAAMC,WAAW,GAAG;EAClBC,WAAW,EAAE,MAAAA,CAAOC,UAAU,EAAEC,IAAI,KAAK;IACvC,MAAMC,QAAQ,GAAGF,UAAU,GACtB,GAAEZ,eAAgB,GAAEY,UAAW,SAAQC,IAAK,EAAC,GAC7C,GAAEZ,gBAAiB,SAAQY,IAAK,EAAC;IACtC,OAAO,MAAM,CAAC,MAAME,KAAK,CAACD,QAAQ,CAAC,EAAEE,IAAI,CAAC,CAAC;EAC7C,CAAC;EACDC,UAAU,EAAE,MAAMC,OAAO,IAAI;IAC3B,MAAMJ,QAAQ,GAAI,GAAEZ,OAAQ,SAAQgB,OAAQ,YAAWf,OAAQ,EAAC;IAChE,OAAO,MAAM,CAAC,MAAMY,KAAK,CAACD,QAAQ,CAAC,EAAEE,IAAI,CAAC,CAAC;EAC7C,CAAC;EACDG,YAAY,EAAE,MAAMD,OAAO,IAAI;IAC7B,MAAME,eAAe,GAAI,GAAElB,OAAQ,SAAQgB,OAAQ,oBAAmBf,OAAQ,EAAC;IAC/E,OAAO,MAAM,CAAC,MAAMY,KAAK,CAACK,eAAe,CAAC,EAAEJ,IAAI,CAAC,CAAC;EACpD,CAAC;EACD;EACAK,eAAe,EAAE,MAAAA,CAAA,KAAY;IAC3B,MAAMC,QAAQ,GAAG,MAAM,CAAC,MAAMP,KAAK,CAACX,iBAAiB,CAAC,EAAEY,IAAI,CAAC,CAAC;IAC9D,OAAOM,QAAQ,CAACC,aAAa;EAC/B,CAAC;EACDC,YAAY,EAAE,MAAAA,CAAOC,YAAY,EAAEC,QAAQ,EAAEC,QAAQ,KAAK;IACxD,MAAMC,QAAQ,GAAG;MACfF,QAAQ;MACRC,QAAQ;MACRJ,aAAa,EAAEE;IACjB,CAAC;IACD;IACA,MAAMI,IAAI,GAAG,MAAM,CACjB,MAAMd,KAAK,CAACV,SAAS,EAAE;MACrB,GAAGE,aAAa;MAChBuB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACJ,QAAQ;IAC/B,CAAC,CAAC,EACFZ,IAAI,CAAC,CAAC;IACR;IACA,IAAIa,IAAI,CAACI,OAAO,EAAE;MAChB,MAAMC,SAAS,GAAG,MAAM,CACtB,MAAMnB,KAAK,CAACT,cAAc,EAAE;QAC1B,GAAGC,aAAa;QAChBuB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAET,aAAa,EAAEE;QAAa,CAAC;MACtD,CAAC,CAAC,EACFT,IAAI,CAAC,CAAC;MACR,OAAOkB,SAAS;IAClB;EACF,CAAC;EACDC,SAAS,EAAE,MAAAA,CAAOD,SAAS,EAAEhB,OAAO,EAAEkB,KAAK,KAAK;IAC9C,MAAMtB,QAAQ,GAAI,GAAEZ,OAAQ,SAAQgB,OAAQ,mBAAkBf,OAAQ,eAAc+B,SAAU,EAAC;IAE/F,MAAMG,MAAM,GAAG,MAAM,CACnB,MAAMtB,KAAK,CAACD,QAAQ,EAAE;MACpB,GAAGP,aAAa;MAChBuB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEI;MAAM,CAAC;IAChC,CAAC,CAAC,EACFpB,IAAI,CAAC,CAAC;IAER,OAAOqB,MAAM;EACf;AACF,CAAC;AAED,eAAe3B,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}