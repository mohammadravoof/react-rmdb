{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport API from '../API';\nexport const useMovieFetch = movieId => {\n  _s();\n  const [state, setState] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        setError(false);\n        const movie = await API.fetchMovie(movieId);\n        const credits = await API.fetchCredits(movieId);\n        // Get directors only\n        const directors = credits.crew.filter(member => member.job === 'Director');\n        setState({\n          ...movie,\n          actors: credits.cast,\n          directors\n        });\n        setLoading(false);\n      } catch (error) {\n        setError(true);\n      }\n    };\n  }, [movieId]);\n  return {\n    State,\n    loading,\n    error\n  };\n};\n_s(useMovieFetch, \"H9fMDtHieNoIS0cJiyLVriXyWm0=\");","map":{"version":3,"names":["useState","useEffect","API","useMovieFetch","movieId","_s","state","setState","loading","setLoading","error","setError","fetchData","movie","fetchMovie","credits","fetchCredits","directors","crew","filter","member","job","actors","cast","State"],"sources":["/Users/mohammadravoof/Documents/GitHub/react-rmdb-v3-starter-files/react-rmdb/src/hooks/useMovieFetch.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport API from '../API';\n\nexport const useMovieFetch = movieId => {\n    const [state, setState] = useState({});\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(false);\n\n    useEffect (() => {\n        const fetchData = async () => {\n            try{\n                setLoading(true);\n                setError(false);\n\n                const movie = await API.fetchMovie(movieId);\n                const credits = await API.fetchCredits(movieId);\n                // Get directors only\n                const directors = credits.crew.filter(\n                    member => member.job === 'Director'\n                );\n\n                setState({\n                    ...movie,\n                    actors: credits.cast,\n                    directors\n                })\n\n                setLoading(false);\n\n            } catch (error) {\n                setError(true);\n            }\n        }\n    }, [movieId])\n\n    return { State, loading, error };\n}"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,GAAG,MAAM,QAAQ;AAExB,OAAO,MAAMC,aAAa,GAAGC,OAAO,IAAI;EAAAC,EAAA;EACpC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC,CAAC;EACtC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAEzCC,SAAS,CAAE,MAAM;IACb,MAAMW,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAG;QACCH,UAAU,CAAC,IAAI,CAAC;QAChBE,QAAQ,CAAC,KAAK,CAAC;QAEf,MAAME,KAAK,GAAG,MAAMX,GAAG,CAACY,UAAU,CAACV,OAAO,CAAC;QAC3C,MAAMW,OAAO,GAAG,MAAMb,GAAG,CAACc,YAAY,CAACZ,OAAO,CAAC;QAC/C;QACA,MAAMa,SAAS,GAAGF,OAAO,CAACG,IAAI,CAACC,MAAM,CACjCC,MAAM,IAAIA,MAAM,CAACC,GAAG,KAAK,UAC7B,CAAC;QAEDd,QAAQ,CAAC;UACL,GAAGM,KAAK;UACRS,MAAM,EAAEP,OAAO,CAACQ,IAAI;UACpBN;QACJ,CAAC,CAAC;QAEFR,UAAU,CAAC,KAAK,CAAC;MAErB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,QAAQ,CAAC,IAAI,CAAC;MAClB;IACJ,CAAC;EACL,CAAC,EAAE,CAACP,OAAO,CAAC,CAAC;EAEb,OAAO;IAAEoB,KAAK;IAAEhB,OAAO;IAAEE;EAAM,CAAC;AACpC,CAAC;AAAAL,EAAA,CAjCYF,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}