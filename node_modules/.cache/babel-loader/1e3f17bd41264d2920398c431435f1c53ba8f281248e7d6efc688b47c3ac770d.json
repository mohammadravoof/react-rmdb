{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport API from '../API';\nconst initialState = {\n  page: 0,\n  results: [],\n  total_pages: 0,\n  total_results: 0\n};\nexport const useHomeFetch = () => {\n  _s();\n  const [state, setState] = useState(initialState);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const fetchMovies = async (page, searchTerm = \"\") => {\n    try {\n      setError(false);\n      setLoading(true);\n      const movies = await API.fetchMovies(searchTerm, page);\n      setState(prev => ({\n        ...movies,\n        results: page > 1 ? [...prev.results, ...movies.results] : [...movies.results]\n      }));\n    } catch (error) {\n      setError(true);\n    }\n    setLoading(false);\n  };\n\n  // Initial render\n  useEffect(() => {\n    fetchMovies(1);\n  }, []);\n  return {\n    state,\n    loading,\n    error\n  };\n};\n_s(useHomeFetch, \"KZgOLoECbee4UfZq/rbGpTsqoEw=\");","map":{"version":3,"names":["useState","useEffect","API","initialState","page","results","total_pages","total_results","useHomeFetch","_s","state","setState","loading","setLoading","error","setError","fetchMovies","searchTerm","movies","prev"],"sources":["/Users/mohammadravoof/Documents/GitHub/react-rmdb-v3-starter-files/react-rmdb/src/hooks/useHomeFetch.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport API from '../API'\n\nconst initialState = {\n    page: 0,\n    results: [],\n    total_pages: 0,\n    total_results: 0\n}\n\nexport const useHomeFetch = () => {\n    const [state, setState] = useState(initialState);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(false);\n    \n    const fetchMovies = async (page, searchTerm = \"\") => {\n        try {\n            setError(false);\n            setLoading(true);\n\n            const movies = await API.fetchMovies(searchTerm, page);\n\n\n            setState(prev => ({\n                ...movies,\n                results:\n                page > 1 ? [...prev.results, ...movies.results] : [...movies.results]\n            }));\n\n        } catch (error) {\n            setError(true);\n        }\n        setLoading(false);\n    };\n\n    // Initial render\n    useEffect(() => {\n        fetchMovies(1)\n    }, [])\n\n    return { state, loading, error };\n};"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,GAAG,MAAM,QAAQ;AAExB,MAAMC,YAAY,GAAG;EACjBC,IAAI,EAAE,CAAC;EACPC,OAAO,EAAE,EAAE;EACXC,WAAW,EAAE,CAAC;EACdC,aAAa,EAAE;AACnB,CAAC;AAED,OAAO,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAACG,YAAY,CAAC;EAChD,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAEzC,MAAMgB,WAAW,GAAG,MAAAA,CAAOZ,IAAI,EAAEa,UAAU,GAAG,EAAE,KAAK;IACjD,IAAI;MACAF,QAAQ,CAAC,KAAK,CAAC;MACfF,UAAU,CAAC,IAAI,CAAC;MAEhB,MAAMK,MAAM,GAAG,MAAMhB,GAAG,CAACc,WAAW,CAACC,UAAU,EAAEb,IAAI,CAAC;MAGtDO,QAAQ,CAACQ,IAAI,KAAK;QACd,GAAGD,MAAM;QACTb,OAAO,EACPD,IAAI,GAAG,CAAC,GAAG,CAAC,GAAGe,IAAI,CAACd,OAAO,EAAE,GAAGa,MAAM,CAACb,OAAO,CAAC,GAAG,CAAC,GAAGa,MAAM,CAACb,OAAO;MACxE,CAAC,CAAC,CAAC;IAEP,CAAC,CAAC,OAAOS,KAAK,EAAE;MACZC,QAAQ,CAAC,IAAI,CAAC;IAClB;IACAF,UAAU,CAAC,KAAK,CAAC;EACrB,CAAC;;EAED;EACAZ,SAAS,CAAC,MAAM;IACZe,WAAW,CAAC,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IAAEN,KAAK;IAAEE,OAAO;IAAEE;EAAM,CAAC;AACpC,CAAC;AAACL,EAAA,CA/BWD,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}