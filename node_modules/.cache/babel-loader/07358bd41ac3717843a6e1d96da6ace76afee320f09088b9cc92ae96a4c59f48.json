{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect, useCallback } from 'react';\nimport API from '../API';\n// Helpers\nimport { isPersistedState } from '../helpers';\nexport const useMovieFetch = movieId => {\n  _s();\n  const [state, setState] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  useEffect(() => {\n    const fetchMovie = async () => {\n      try {\n        setLoading(true);\n        setError(false);\n        const movie = await API.fetchMovie(movieId);\n        const credits = await API.fetchCredits(movieId);\n        // Get directors only\n        const directors = credits.crew.filter(member => member.job === 'Director');\n        setState({\n          ...movie,\n          actors: credits.cast,\n          directors\n        });\n        setLoading(false);\n      } catch (error) {\n        setError(true);\n      }\n    };\n\n    // const sessionState = isPersistedState(movieId);\n    // if (sessionState) {\n    //     setState(sessionState);\n    //     setLoading(false);\n    //     return;\n    // };\n\n    fetchMovie();\n  }, [movieId]);\n\n  // Write to sessionStorage\n  // useEffect(() => {\n  //     sessionStorage.setItem(movieId, JSON.stringify(state));\n  // }, [movieId, state])\n\n  return {\n    state,\n    loading,\n    error\n  };\n};\n_s(useMovieFetch, \"H9fMDtHieNoIS0cJiyLVriXyWm0=\");","map":{"version":3,"names":["useState","useEffect","useCallback","API","isPersistedState","useMovieFetch","movieId","_s","state","setState","loading","setLoading","error","setError","fetchMovie","movie","credits","fetchCredits","directors","crew","filter","member","job","actors","cast"],"sources":["/Users/mohammadravoof/Documents/GitHub/react-rmdb-v3-starter-files/react-rmdb/src/hooks/useMovieFetch.js"],"sourcesContent":["import { useState, useEffect, useCallback  } from 'react';\nimport API from '../API';\n// Helpers\nimport { isPersistedState } from '../helpers';\n\nexport const useMovieFetch = movieId => {\n    const [state, setState] = useState({});\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(false);\n\n    useEffect (() => {\n        const fetchMovie = async () => {\n            try{\n                setLoading(true);\n                setError(false);\n\n                const movie = await API.fetchMovie(movieId);\n                const credits = await API.fetchCredits(movieId);\n                // Get directors only\n                const directors = credits.crew.filter(\n                    member => member.job === 'Director'\n                );\n\n                setState({\n                    ...movie,\n                    actors: credits.cast,\n                    directors\n                })\n\n                setLoading(false);\n\n            } catch (error) {\n                setError(true);\n            }\n        };\n            \n        // const sessionState = isPersistedState(movieId);\n        // if (sessionState) {\n        //     setState(sessionState);\n        //     setLoading(false);\n        //     return;\n        // };\n\n            fetchMovie();\n        }, [movieId]);\n\n        // Write to sessionStorage\n        // useEffect(() => {\n        //     sessionStorage.setItem(movieId, JSON.stringify(state));\n        // }, [movieId, state])\n\n    return { state, loading, error };\n};"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAS,OAAO;AACzD,OAAOC,GAAG,MAAM,QAAQ;AACxB;AACA,SAASC,gBAAgB,QAAQ,YAAY;AAE7C,OAAO,MAAMC,aAAa,GAAGC,OAAO,IAAI;EAAAC,EAAA;EACpC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC,CAAC;EACtC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAEzCC,SAAS,CAAE,MAAM;IACb,MAAMa,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAG;QACCH,UAAU,CAAC,IAAI,CAAC;QAChBE,QAAQ,CAAC,KAAK,CAAC;QAEf,MAAME,KAAK,GAAG,MAAMZ,GAAG,CAACW,UAAU,CAACR,OAAO,CAAC;QAC3C,MAAMU,OAAO,GAAG,MAAMb,GAAG,CAACc,YAAY,CAACX,OAAO,CAAC;QAC/C;QACA,MAAMY,SAAS,GAAGF,OAAO,CAACG,IAAI,CAACC,MAAM,CACjCC,MAAM,IAAIA,MAAM,CAACC,GAAG,KAAK,UAC7B,CAAC;QAEDb,QAAQ,CAAC;UACL,GAAGM,KAAK;UACRQ,MAAM,EAAEP,OAAO,CAACQ,IAAI;UACpBN;QACJ,CAAC,CAAC;QAEFP,UAAU,CAAC,KAAK,CAAC;MAErB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,QAAQ,CAAC,IAAI,CAAC;MAClB;IACJ,CAAC;;IAED;IACA;IACA;IACA;IACA;IACA;;IAEIC,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,CAACR,OAAO,CAAC,CAAC;;EAEb;EACA;EACA;EACA;;EAEJ,OAAO;IAAEE,KAAK;IAAEE,OAAO;IAAEE;EAAM,CAAC;AACpC,CAAC;AAACL,EAAA,CA/CWF,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}