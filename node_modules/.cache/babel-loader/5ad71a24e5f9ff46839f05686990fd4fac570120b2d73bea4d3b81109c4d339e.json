{"ast":null,"code":"import{useState,useEffect}from\"react\";// API\nimport API from'../API';// Helpers\nimport{isPersistedState}from\"../helpers\";const initialState={page:0,results:[],total_pages:0,total_results:0};export const useHomeFetch=()=>{const[searchTerm,setSearchTerm]=useState('');const[state,setState]=useState(initialState);const[loading,setLoading]=useState(false);const[error,setError]=useState(false);const[isLoadingMore,setIsLoadingMore]=useState(false);const fetchMovies=async function(page){let searchTerm=arguments.length>1&&arguments[1]!==undefined?arguments[1]:\"\";try{setError(false);setLoading(true);const movies=await API.fetchMovies(searchTerm,page);setState(prev=>({...movies,results:page>1?[...prev.results,...movies.results]:[...movies.results]}));}catch(error){setError(true);}setLoading(false);};//Initial\n// useEffect(() => {\n//     fetchMovies(1);\n// },[])\n// Initial render and search\nuseEffect(()=>{if(!searchTerm){const sessionState=isPersistedState('homeState');if(sessionState){setState(sessionState);return;}}setState(initialState);fetchMovies(1,searchTerm);},[searchTerm]);// Load More\nuseEffect(()=>{if(!isLoadingMore)return;fetchMovies(state.page+1,searchTerm);setIsLoadingMore(false);},[isLoadingMore,searchTerm,state.page]);// Write sessionStorage\nuseEffect(()=>{if(!searchTerm)sessionStorage.setItem('homeState',JSON.stringify(state));},[searchTerm,state]);return{state,loading,error,searchTerm,setSearchTerm,setIsLoadingMore};};","map":{"version":3,"names":["useState","useEffect","API","isPersistedState","initialState","page","results","total_pages","total_results","useHomeFetch","searchTerm","setSearchTerm","state","setState","loading","setLoading","error","setError","isLoadingMore","setIsLoadingMore","fetchMovies","arguments","length","undefined","movies","prev","sessionState","sessionStorage","setItem","JSON","stringify"],"sources":["/Users/mohammadravoof/Documents/GitHub/react-rmdb-v3-starter-files/react-rmdb/src/hooks/useHomeFetch.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\n// API\nimport API from '../API'\n// Helpers\nimport { isPersistedState } from \"../helpers\";\n\nconst initialState = {\n    page: 0,\n    results: [],\n    total_pages: 0,\n    total_results: 0\n}\n\nexport const useHomeFetch = () => {\n    const [searchTerm, setSearchTerm] = useState('');\n    const [state, setState] = useState(initialState);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(false);\n    const [isLoadingMore, setIsLoadingMore] = useState(false);\n    \n\n\n    const fetchMovies = async (page, searchTerm = \"\") => {\n        try {\n            setError(false);\n            setLoading(true);\n\n            const movies = await API.fetchMovies(searchTerm, page);\n\n\n            setState(prev => ({\n                ...movies,\n                results:\n                page > 1 ? [...prev.results, ...movies.results] : [...movies.results]\n            }));\n\n        } catch (error) {\n            setError(true);\n        }\n        setLoading(false);\n    };\n\n    //Initial\n    // useEffect(() => {\n    //     fetchMovies(1);\n    // },[])\n\n    // Initial render and search\n    useEffect(() => {\n        if (!searchTerm) {\n            const sessionState = isPersistedState('homeState');\n\n            if (sessionState) {\n                setState(sessionState);\n                return;\n            }\n        }\n\n        setState(initialState);\n        fetchMovies(1, searchTerm);\n    }, [searchTerm])\n\n    // Load More\n    useEffect(() => {\n        if(!isLoadingMore) return;\n\n        fetchMovies(state.page + 1, searchTerm);\n        setIsLoadingMore(false);\n\n    }, [isLoadingMore, searchTerm, state.page])\n\n    // Write sessionStorage\n    useEffect(() => {\n        if (!searchTerm) sessionStorage.setItem('homeState', JSON.stringify(state))\n    }, [searchTerm, state])\n\n    return { state, loading, error,searchTerm, setSearchTerm, setIsLoadingMore };\n};"],"mappings":"AAAA,OAASA,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAC3C;AACA,MAAO,CAAAC,GAAG,KAAM,QAAQ,CACxB;AACA,OAASC,gBAAgB,KAAQ,YAAY,CAE7C,KAAM,CAAAC,YAAY,CAAG,CACjBC,IAAI,CAAE,CAAC,CACPC,OAAO,CAAE,EAAE,CACXC,WAAW,CAAE,CAAC,CACdC,aAAa,CAAE,CACnB,CAAC,CAED,MAAO,MAAM,CAAAC,YAAY,CAAGA,CAAA,GAAM,CAC9B,KAAM,CAACC,UAAU,CAAEC,aAAa,CAAC,CAAGX,QAAQ,CAAC,EAAE,CAAC,CAChD,KAAM,CAACY,KAAK,CAAEC,QAAQ,CAAC,CAAGb,QAAQ,CAACI,YAAY,CAAC,CAChD,KAAM,CAACU,OAAO,CAAEC,UAAU,CAAC,CAAGf,QAAQ,CAAC,KAAK,CAAC,CAC7C,KAAM,CAACgB,KAAK,CAAEC,QAAQ,CAAC,CAAGjB,QAAQ,CAAC,KAAK,CAAC,CACzC,KAAM,CAACkB,aAAa,CAAEC,gBAAgB,CAAC,CAAGnB,QAAQ,CAAC,KAAK,CAAC,CAIzD,KAAM,CAAAoB,WAAW,CAAG,cAAAA,CAAOf,IAAI,CAAsB,IAApB,CAAAK,UAAU,CAAAW,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,EAAE,CAC5C,GAAI,CACAJ,QAAQ,CAAC,KAAK,CAAC,CACfF,UAAU,CAAC,IAAI,CAAC,CAEhB,KAAM,CAAAS,MAAM,CAAG,KAAM,CAAAtB,GAAG,CAACkB,WAAW,CAACV,UAAU,CAAEL,IAAI,CAAC,CAGtDQ,QAAQ,CAACY,IAAI,GAAK,CACd,GAAGD,MAAM,CACTlB,OAAO,CACPD,IAAI,CAAG,CAAC,CAAG,CAAC,GAAGoB,IAAI,CAACnB,OAAO,CAAE,GAAGkB,MAAM,CAAClB,OAAO,CAAC,CAAG,CAAC,GAAGkB,MAAM,CAAClB,OAAO,CACxE,CAAC,CAAC,CAAC,CAEP,CAAE,MAAOU,KAAK,CAAE,CACZC,QAAQ,CAAC,IAAI,CAAC,CAClB,CACAF,UAAU,CAAC,KAAK,CAAC,CACrB,CAAC,CAED;AACA;AACA;AACA;AAEA;AACAd,SAAS,CAAC,IAAM,CACZ,GAAI,CAACS,UAAU,CAAE,CACb,KAAM,CAAAgB,YAAY,CAAGvB,gBAAgB,CAAC,WAAW,CAAC,CAElD,GAAIuB,YAAY,CAAE,CACdb,QAAQ,CAACa,YAAY,CAAC,CACtB,OACJ,CACJ,CAEAb,QAAQ,CAACT,YAAY,CAAC,CACtBgB,WAAW,CAAC,CAAC,CAAEV,UAAU,CAAC,CAC9B,CAAC,CAAE,CAACA,UAAU,CAAC,CAAC,CAEhB;AACAT,SAAS,CAAC,IAAM,CACZ,GAAG,CAACiB,aAAa,CAAE,OAEnBE,WAAW,CAACR,KAAK,CAACP,IAAI,CAAG,CAAC,CAAEK,UAAU,CAAC,CACvCS,gBAAgB,CAAC,KAAK,CAAC,CAE3B,CAAC,CAAE,CAACD,aAAa,CAAER,UAAU,CAAEE,KAAK,CAACP,IAAI,CAAC,CAAC,CAE3C;AACAJ,SAAS,CAAC,IAAM,CACZ,GAAI,CAACS,UAAU,CAAEiB,cAAc,CAACC,OAAO,CAAC,WAAW,CAAEC,IAAI,CAACC,SAAS,CAAClB,KAAK,CAAC,CAAC,CAC/E,CAAC,CAAE,CAACF,UAAU,CAAEE,KAAK,CAAC,CAAC,CAEvB,MAAO,CAAEA,KAAK,CAAEE,OAAO,CAAEE,KAAK,CAACN,UAAU,CAAEC,aAAa,CAAEQ,gBAAiB,CAAC,CAChF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}