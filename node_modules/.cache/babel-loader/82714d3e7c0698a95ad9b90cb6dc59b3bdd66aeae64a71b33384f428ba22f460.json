{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport API from '../API';\nconst initialState = {\n  page: 0,\n  results: [],\n  total_pages: 0,\n  total_results: 0\n};\nexport const useHomeFetch = () => {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [state, setState] = useState(initialState);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [isLoadingMore, setIsLoadingMore] = useState(false);\n  const fetchMovies = async (page, searchTerm = \"\") => {\n    try {\n      setError(false);\n      setLoading(true);\n      const movies = await API.fetchMovies(searchTerm, page);\n      setState(prev => ({\n        ...movies,\n        results: page > 1 ? [...prev.results, ...movies.results] : [...movies.results]\n      }));\n    } catch (error) {\n      setError(true);\n    }\n    setLoading(false);\n  };\n\n  //Initial\n  // useEffect(() => {\n  //     fetchMovies(1);\n  // },[])\n\n  // Initial render and search\n  useEffect(() => {\n    setState(initialState);\n    fetchMovies(1, searchTerm);\n  }, [searchTerm]);\n\n  // Load More\n  useEffect(() => {\n    if (!isLoadingMore) return;\n    fetchMovies(state.page + 1, searchTerm);\n    setIsLoadingMore(false);\n  }, [isLoadingMore, searchTerm, state.page]);\n  return {\n    state,\n    loading,\n    error,\n    searchTerm,\n    setSearchTerm,\n    setIsLoadingMore\n  };\n};\n_s(useHomeFetch, \"/ZtjXkYhsylOvdJKmq7D1mhW5Bo=\");","map":{"version":3,"names":["useState","useEffect","API","initialState","page","results","total_pages","total_results","useHomeFetch","_s","searchTerm","setSearchTerm","state","setState","loading","setLoading","error","setError","isLoadingMore","setIsLoadingMore","fetchMovies","movies","prev"],"sources":["/Users/mohammadravoof/Documents/GitHub/react-rmdb-v3-starter-files/react-rmdb/src/hooks/useHomeFetch.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport API from '../API'\n\nconst initialState = {\n    page: 0,\n    results: [],\n    total_pages: 0,\n    total_results: 0\n}\n\nexport const useHomeFetch = () => {\n    const [searchTerm, setSearchTerm] = useState('');\n    const [state, setState] = useState(initialState);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(false);\n    const [isLoadingMore, setIsLoadingMore] = useState(false);\n    \n\n\n    const fetchMovies = async (page, searchTerm = \"\") => {\n        try {\n            setError(false);\n            setLoading(true);\n\n            const movies = await API.fetchMovies(searchTerm, page);\n\n\n            setState(prev => ({\n                ...movies,\n                results:\n                page > 1 ? [...prev.results, ...movies.results] : [...movies.results]\n            }));\n\n        } catch (error) {\n            setError(true);\n        }\n        setLoading(false);\n    };\n\n    //Initial\n    // useEffect(() => {\n    //     fetchMovies(1);\n    // },[])\n\n    // Initial render and search\n    useEffect(() => {\n        setState(initialState);\n        fetchMovies(1, searchTerm);\n    }, [searchTerm])\n\n    // Load More\n    useEffect(() => {\n        if(!isLoadingMore) return;\n\n        fetchMovies(state.page + 1, searchTerm);\n        setIsLoadingMore(false);\n\n    }, [isLoadingMore, searchTerm, state.page])\n\n    return { state, loading, error,searchTerm, setSearchTerm, setIsLoadingMore };\n};"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,GAAG,MAAM,QAAQ;AAExB,MAAMC,YAAY,GAAG;EACjBC,IAAI,EAAE,CAAC;EACPC,OAAO,EAAE,EAAE;EACXC,WAAW,EAAE,CAAC;EACdC,aAAa,EAAE;AACnB,CAAC;AAED,OAAO,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAACG,YAAY,CAAC;EAChD,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EACzC,MAAM,CAACkB,aAAa,EAAEC,gBAAgB,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EAIzD,MAAMoB,WAAW,GAAG,MAAAA,CAAOhB,IAAI,EAAEM,UAAU,GAAG,EAAE,KAAK;IACjD,IAAI;MACAO,QAAQ,CAAC,KAAK,CAAC;MACfF,UAAU,CAAC,IAAI,CAAC;MAEhB,MAAMM,MAAM,GAAG,MAAMnB,GAAG,CAACkB,WAAW,CAACV,UAAU,EAAEN,IAAI,CAAC;MAGtDS,QAAQ,CAACS,IAAI,KAAK;QACd,GAAGD,MAAM;QACThB,OAAO,EACPD,IAAI,GAAG,CAAC,GAAG,CAAC,GAAGkB,IAAI,CAACjB,OAAO,EAAE,GAAGgB,MAAM,CAAChB,OAAO,CAAC,GAAG,CAAC,GAAGgB,MAAM,CAAChB,OAAO;MACxE,CAAC,CAAC,CAAC;IAEP,CAAC,CAAC,OAAOW,KAAK,EAAE;MACZC,QAAQ,CAAC,IAAI,CAAC;IAClB;IACAF,UAAU,CAAC,KAAK,CAAC;EACrB,CAAC;;EAED;EACA;EACA;EACA;;EAEA;EACAd,SAAS,CAAC,MAAM;IACZY,QAAQ,CAACV,YAAY,CAAC;IACtBiB,WAAW,CAAC,CAAC,EAAEV,UAAU,CAAC;EAC9B,CAAC,EAAE,CAACA,UAAU,CAAC,CAAC;;EAEhB;EACAT,SAAS,CAAC,MAAM;IACZ,IAAG,CAACiB,aAAa,EAAE;IAEnBE,WAAW,CAACR,KAAK,CAACR,IAAI,GAAG,CAAC,EAAEM,UAAU,CAAC;IACvCS,gBAAgB,CAAC,KAAK,CAAC;EAE3B,CAAC,EAAE,CAACD,aAAa,EAAER,UAAU,EAAEE,KAAK,CAACR,IAAI,CAAC,CAAC;EAE3C,OAAO;IAAEQ,KAAK;IAAEE,OAAO;IAAEE,KAAK;IAACN,UAAU;IAAEC,aAAa;IAAEQ;EAAiB,CAAC;AAChF,CAAC;AAACV,EAAA,CAlDWD,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}