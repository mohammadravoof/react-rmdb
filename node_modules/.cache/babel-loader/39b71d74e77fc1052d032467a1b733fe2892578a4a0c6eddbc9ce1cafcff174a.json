{"ast":null,"code":"var _jsxFileName = \"/Users/mohammadravoof/Documents/GitHub/react-rmdb-v3-starter-files/react-rmdb/src/ components/Movie.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\n// Config\nimport { IMAGE_BASE_URL, POSTER_SIZE } from '../config';\n// Components \nimport Grid from './Grid';\nimport Spinner from './Spinner';\n// Hook\n\n//Image\nimport NoImage from '../images/no_image.jpg';\nimport { useMovieFetch } from '../hooks/useMovieFetch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Movie = () => {\n  _s();\n  const {\n    movieId\n  } = useParams();\n  const {\n    state: movie,\n    loading,\n    error\n  } = useMovieFetch(movieId);\n  console.log(movie);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Movie\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this), \";\"]\n  }, void 0, true);\n};\n_s(Movie, \"MFvN9GJ3GVLfd55hOP/zB0RDH6Y=\", false, function () {\n  return [useParams, useMovieFetch];\n});\n_c = Movie;\nexport default Movie;\nvar _c;\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"names":["React","useParams","IMAGE_BASE_URL","POSTER_SIZE","Grid","Spinner","NoImage","useMovieFetch","jsxDEV","_jsxDEV","Fragment","_Fragment","Movie","_s","movieId","state","movie","loading","error","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mohammadravoof/Documents/GitHub/react-rmdb-v3-starter-files/react-rmdb/src/ components/Movie.js"],"sourcesContent":["import React from 'react';\nimport { useParams } from 'react-router-dom';\n// Config\nimport { IMAGE_BASE_URL, POSTER_SIZE } from '../config';\n// Components \nimport Grid from './Grid';\nimport Spinner from './Spinner';\n// Hook\n\n//Image\nimport NoImage from '../images/no_image.jpg';\nimport { useMovieFetch } from '../hooks/useMovieFetch';\n\nconst Movie = () => {\n    const { movieId } = useParams();\n\n    const { state: movie, loading, error } = useMovieFetch(movieId);\n\n    console.log(movie);\n    return (\n        <>\n        <div>Movie</div>;\n        </>\n    )\n\n} \n\nexport default Movie;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAC5C;AACA,SAASC,cAAc,EAAEC,WAAW,QAAQ,WAAW;AACvD;AACA,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,OAAO,MAAM,WAAW;AAC/B;;AAEA;AACA,OAAOC,OAAO,MAAM,wBAAwB;AAC5C,SAASC,aAAa,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEvD,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM;IAAEC;EAAQ,CAAC,GAAGb,SAAS,CAAC,CAAC;EAE/B,MAAM;IAAEc,KAAK,EAAEC,KAAK;IAAEC,OAAO;IAAEC;EAAM,CAAC,GAAGX,aAAa,CAACO,OAAO,CAAC;EAE/DK,OAAO,CAACC,GAAG,CAACJ,KAAK,CAAC;EAClB,oBACIP,OAAA,CAAAE,SAAA;IAAAU,QAAA,gBACAZ,OAAA;MAAAY,QAAA,EAAK;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,KAChB;EAAA,eAAE,CAAC;AAGX,CAAC;AAAAZ,EAAA,CAZKD,KAAK;EAAA,QACaX,SAAS,EAEYM,aAAa;AAAA;AAAAmB,EAAA,GAHpDd,KAAK;AAcX,eAAeA,KAAK;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}